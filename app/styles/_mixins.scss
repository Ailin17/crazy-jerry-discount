@use "sass:list";
@use "sass:meta";
@use 'variables'as *;

// Button mixin
@mixin button($bg, $color, $padding: $space-sm $space-sm, $radius: 8px) {
  background-color: $bg;
  color: $color;
  padding: $padding;
  border-radius: $radius;
  border: none;
  cursor: pointer;
  font-family: $font-body;
  text-transform: uppercase;
  transition: all 0.2s ease-in-out;
  min-width: 2.5rem;
  font-weight: 700;
  text-align: center;

  &:hover {
    filter: brightness(0.9);
  }
}

// Typography mixin
@mixin heading($level) {
  color: $color-navy;

  @if $level==1 {
    // filter: drop-shadow(0px 1px 1px $color-deep-navy);
    font-family: $font-heading;
    font-size: $fs-h1;
    // font-weight: 700;
    line-height: 1.2;
  }

  @else if $level==2 {
    font-family: $font-heading;
    font-size: $fs-h2;
    // font-weight: 700;
    line-height: 1.3;
  }

  @else if $level==3 {
    font-family: $font-heading;
    font-size: $fs-h3;
    // font-weight: 700;
    line-height: 1.4;
  }
}

// Responsive media query mixin
@mixin respond-to($breakpoint) {
  @if $breakpoint=='sm' {
    @media (max-width: 640px) {
      @content;
    }
  }

  @else if $breakpoint=='md' {
    @media (max-width: 768px) {
      @content;
    }
  }

  @else if $breakpoint=='lg' {
    @media (max-width: 1024px) {
      @content;
    }
  }
}


@mixin center-x-y() {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

@mixin center-x() {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

@mixin center-y() {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

@mixin media-query($media-query) {
  $breakpoint-found: false;

  @each $breakpoint in $s-screen--breakpoints {
    $name: list.nth($breakpoint, 1);
    $declaration: list.nth($breakpoint, 2);

    @if $media-query==$name and $declaration {
      $breakpoint-found: true;

      @media only screen and #{$declaration} {
        @content;
      }
    }
  }

  @if $breakpoint-found==false {
    @warn 'Breakpoint "#{$media-query}" does not exist';
  }
}